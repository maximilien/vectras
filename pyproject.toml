[project]
name = "vectras"
version = "0.1.0"
description = "Vectras: Minimal API, MCP, and Agent scaffold with tests and scripts"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
  { name = "dr.max" }
]

dependencies = [
  "fastapi>=0.111.0",
  "uvicorn[standard]>=0.30.0",
  "pydantic>=2.7.0",
  "httpx>=0.27.0",
  "openai>=1.40.0",
  "openai-agents>=0.2.0",
  "python-dotenv>=1.0.1",
  "requests>=2.32.0",
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.0",
  "anyio>=4.4.0",
  "pyyaml>=6.0.1",
  "pygithub>=2.1.1",
  "watchdog>=3.0.0",
  "gitpython>=3.1.40",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.0",
  "anyio>=4.4.0",
  "ruff>=0.5.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra"
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning:src/vectras/agents/testing.py",
]

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["frontend", "logs"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
]
ignore = [
  "E501",  # line length handled by formatter preference
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

 
